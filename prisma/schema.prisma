generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  firstname     String
  lastname      String
  email         String   @unique
  contactnumber String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  subscription Subscription[]
  invoices     Invoice[]
}

model Plan{
  id          Int            @id @default(autoincrement())
  name        String         @unique
  price       Int
  currency    String         @default("INR")
  features    Json
  isActive    Boolean        @default(true)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  
  subscriptions Subscription[] 
}

model Subscription {
  id              Int      @id @default(autoincrement())
  userId          Int
  planId          Int
  pluralOrderId   String   @unique
  status          String   @default("active")
  nextBillingDate DateTime
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  plan Plan   @relation(fields: [planId], references: [id])

  @@index([userId])
  @@index([planId])
}

model BusinessSetting {
  id                       Int      @id @default(autoincrement())
  userEmail                String?  @unique
  businessName             String
  businessType             String
  businessRegistrationType String
  isGstRegistered          Boolean
  gstNumber                String?
  panNumber                String
  companyEmail             String
  companyNumber            String
  billingAddress           String
  state                    String
  pincode                  String
  city                     String
  termsAndConditions       String?
  businessLogoUrl          String?
  signatureUrl             String?
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt
}

model Invoice {
  id                  String           @id @default(cuid())
  billingAddress      String
  brandName           String
  partyContactEmail   String
  partyContactNumber  String
  partyGst            String
  invoiceNumber       String
  billDate            DateTime
  paymentDeadline     DateTime
  items               InvoiceItem[]
  totalTax            Float
  totalBeforeTax      Float
  totalAfterTax       Float
  additionalCharges   Float            @default(0)
  roundOff            Float            @default(0)
  discount            Float            @default(0)
  totalPayableAmount  Float
  status              String           @default("PENDING")
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt
  userId              Int
  user                User             @relation(fields: [userId], references: [id])
}

model InvoiceItem {
  id              String          @id @default(cuid())
  invoiceId       String
  invoice         Invoice         @relation(fields: [invoiceId], references: [id])
  itemName        String
  itemType        String
  itemCode        String
  quantity        Int
  measuringUnit   String
  unitPrice       Float
  tax             Float
  beforeTaxAmount Float
  afterTaxAmount  Float
}